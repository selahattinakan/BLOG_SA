@model DB_EFCore.Entity.Article
@{
    ViewData["Title"] = "Makale";
}

<link href="~/lib/highlight/atom-one-dark.min.css" rel="stylesheet" />
<script src="~/lib/highlight/highlight.min.js"></script>
<link href="~/lib/highlight/vs2015.css" rel="stylesheet" />

<link href="~/lib/quill/quill.snow.css" rel="stylesheet" />
<script src="~/lib/quill/quill.js"></script>



<article class="blog-post px-3 py-5 p-md-5">
    <div class="container">
        <header class="blog-post-header">
            <h2 class="title mb-2">@Model.Title</h2>
            <div class="meta mb-3">
                <span class="date">@Model.PublishDate.ToShortDateString() tarihinde yayınlandı</span>
                <span class="time">@Model.ReadMinute dakikalık okuma</span>
                <span class="comment">
                    <a href="#">@Model.ArticleComments.Count yorum</a>
                </span>
            </div>
        </header>

        <div class="blog-post-body">
            <div>
                <div id="quillToolbar" style="display:none !important;"></div>

                <div id="editor" style="border:none !important;" readOnly="true">
                </div>
            </div>
        </div>

        <div>
            @* Yorum alanları *@
        </div>

        <nav class="blog-nav nav nav-justified my-5">
            <a class="nav-link-prev nav-item nav-link @((bool) ViewBag.FirstArticle == true ? "d-none" : "") rounded-left" asp-area="" asp-controller="Home" asp-action="Article" asp-route-articleId="@((int)ViewBag.PrevArticle)">Önceki Makale<i class="arrow-prev fas fa-long-arrow-alt-left"></i></a>
            <a class="nav-link-next nav-item nav-link @((bool) ViewBag.LastArticle == true ? "d-none" : "") rounded-right" asp-area="" asp-controller="Home" asp-action="Article" asp-route-articleId="@((int)ViewBag.NextArticle)">Sonraki Makale<i class="arrow-next fas fa-long-arrow-alt-right"></i></a>
        </nav>

    </div>
</article>


<script>
    const quill = new Quill('#editor', {
        readOnly: true,
        modules: {
            syntax: true,
            toolbar: "#quillToolbar"
        },
        theme: 'snow'
    });

    let toolbarLoaded = false;
    quill.on('editor-change', (event) => {
        if (!toolbarLoaded) {
            toolbarLoaded = true;
        }
    });

    const highlightedCode = hljs.highlight(
        '',
        { language: 'csharp' }
    ).value

    let contentJson = @Json.Serialize(Model.Content);
    quill.setContents(JSON.parse(contentJson));
</script>
